version: "3.7"

services:
    php:
        build: .docker/php-fpm
        volumes:
            - .:/app
            - ~/.composer:/.composer

    nginx:
        image: nginx:latest
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nginx.rule=Host(`elastica.docker.localhost`)"
            - "traefik.http.routers.nginx.entrypoints=web,websecure"
            - "traefik.http.routers.nginx.middlewares=https-redirect"
            - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
            - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        volumes:
            - .:/app
            - .docker/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
        links:
            - php

    node:
        build: .docker/node
        volumes:
            - .:/app

    traefik:
        image: traefik:v2.6
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.websecure.http.tls.domains[0].main=docker.localhost"
            - "--entrypoints.websecure.http.tls.domains[0].sans=elastica.docker.localhost,*.localhost,localhost,traefik"
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        links:
            - nginx

    dockerize:
        image: jwilder/dockerize

###> doctrine/doctrine-bundle ###
    database:
        image: postgres:${POSTGRES_VERSION:-15}-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-app}
            # You should definitely change the password in production
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
            POSTGRES_USER: ${POSTGRES_USER:-app}
        volumes:
            - db-data:/var/lib/postgresql/data:rw
            # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
            # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

    elasticsearch:
        image: elasticsearch:${ELASTICSEARCH_VERSION:-8.6.0}
        environment:
            - discovery.type=single-node
            - ES_JAVA_OPTS=-Xms1g -Xmx1g
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
        volumes:
            - es-data:/usr/share/elasticsearch/data

volumes:
###> doctrine/doctrine-bundle ###
    db-data:
###< doctrine/doctrine-bundle ###
    es-data:
